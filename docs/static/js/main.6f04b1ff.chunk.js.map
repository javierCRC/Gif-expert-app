{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFectGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","pCategory","a","apiURL","encodeURI","fetch","resp","json","data","arrayGifs","map","objImageMap","id","images","downsized_medium","GifGrid","category","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFectGifs","img","GifExpertApp","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMA2CeA,EAvCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAqBzC,OAGI,sBAAMC,SAfU,SAACC,GACjBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MASlB,SACK,uBACSO,KAAK,OACLC,MAAST,EACTU,SAxBO,SAACP,GAEtBF,EAAcE,EAAEQ,OAAOF,a,QCYhBG,EAlBM,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,MAAQC,EAAW,EAAXA,IAI7B,OACI,mCACA,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAKG,IAAOJ,IACvB,mCAAOA,EAAP,a,uBCVCK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGbC,EAHa,iDAGuCC,UAAUH,GAHjD,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAMFC,EAAYD,EAAKE,KAAM,SAAAC,GAAgB,IAAD,EACxC,MAAO,CACHC,GAAKD,EAAYC,GACjBjB,MAAOgB,EAAYhB,MACnBC,IAAG,UAAEe,EAAYE,cAAd,aAAE,EAAoBC,iBAAiBlB,QAf/B,kBAoBZa,GApBY,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECHd,SAAEf,GAAgB,IAAD,EAEdpB,mBAAS,CAC/B2B,KAAM,GACNS,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAlBEC,qBAAW,WACTpB,EAASC,GACPoB,MAAO,SAAAC,GAENC,YAAW,WAETC,QAAQC,IAAIH,GAEXH,EAAS,CACPX,KAAMc,EACNL,SAAS,MAGX,UAGT,CAAEhB,IAEIiB,EDnByBQ,CAAaV,GAAhCH,EAJwB,EAI7BL,KAAYS,EAJiB,EAIjBA,QAGpB,OAGI,cADA,CACA,sBACQ,mCAAOD,EAAP,OAKEC,GAAW,mBAAGpB,UAAU,mCAAb,0BAID,qBAAKA,UAAU,YAAf,SAEQgB,EAAOH,KAAK,SAAAiB,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIf,aEYpCgB,EApCM,WAAO,IAAD,EAGc/C,mBAAS,CAAC,kBAHxB,mBAGfgD,EAHe,KAGHjD,EAHG,KAMvB,OAGK,cADA,CACA,sBACG,8CAIA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQiD,EAAWnB,KAAK,SAACoB,GAAD,OACZ,cAAC,EAAD,CAEGd,SAAac,GADNA,Y,MCrBlCC,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6f04b1ff.chunk.js","sourcesContent":["// Componentes funciuonales  acortador \"rafcp\" y presionamos tab\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategorias } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const hadleInputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const hadleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log('Submit done');\r\n\r\n        if ( inputValue.trim().length > 2 ) { // para evitar valores vacios\r\n            setCategorias( cate => [ inputValue ,...cate]); // para que la ultima en ingresar sea la primera\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        \r\n     \r\n        <form onSubmit= { hadleSubmit }>\r\n             <input \r\n                      type=\"text\"\r\n                      value= { inputValue }\r\n                      onChange = { hadleInputChange }\r\n             />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","// Componentes funciuonales  acortador \"rafcp\" y presionamos tab\r\nimport React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\n const GifGridItem = ( { title , url } ) => {\r\n   \r\n    //console.log({ id , title , url });\r\n\r\n    return (\r\n        <>\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url} alt= { title } />\r\n            <p>  { title } </p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n/*GifGridItem.propTypes = {\r\n\r\n}*/\r\n\r\nexport default GifGridItem\r\n","\r\n// Esta funcion retorna una promesa con todos los gif\r\nexport const getGifs = async ( pCategory ) => {\r\n      \r\n    //Creamos una constante asincrona para obtener la url de las imagenes\r\n    const apiURL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(pCategory)}&limit=10&api_key=GCVaJd2W0gk0vgC151N1bxte15z8DwmJ`;\r\n    const resp = await fetch( apiURL );\r\n    const { data } = await resp.json();\r\n   \r\n    //console.log(data);\r\n    \r\n    \r\n     //Se realiza un map de los datos obtenidos de la respuesta de la API de Gifs\r\n    const arrayGifs = data.map ( objImageMap => {\r\n        return {\r\n            id : objImageMap.id,\r\n            title: objImageMap.title,\r\n            url: objImageMap.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    //console.log(arrayGifs);\r\n    return arrayGifs;\r\n}","// Componentes funciuonales  acortador \"rafcp\" y presionamos tab\r\n//import React,{ useState , useEffect} from 'react'\r\nimport React from 'react'\r\nimport    GifGridItem      from './GifGridItem.js';\r\nimport    { useFectGifs }      from '../hooks/useFectGifs.js';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n \r\n\r\n    const { data:images,loading } = useFectGifs( category );\r\n    \r\n        \r\n    return (\r\n        \r\n        // fragment implicito \r\n        <>\r\n                <h3> { category } </h3>\r\n\r\n                \r\n                \r\n                \r\n                { loading && <p className=\"animate__animated animate__flash\" >Cargando....</p> }\r\n\r\n                        \r\n                        \r\n                            <div className=\"card-grid\">\r\n                                {\r\n                                    images.map( img => (\r\n                                        <GifGridItem \r\n                                        key= { img.id } \r\n                                        {...img }\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        \r\n                       \r\n                        \r\n                \r\n\r\n                \r\n        </>\r\n        \r\n    )\r\n}\r\n","// Esto es un custom hooks\r\nimport { useState,useEffect } from 'react';\r\nimport    { getGifs }      from '../helpers/getGifs.js';\r\n\r\nexport const useFectGifs = ( pCategory ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n      //HOOK que me permite renderizar solo la primera vez un cierto componente o funcion.\r\n      useEffect( () =>{\r\n        getGifs( pCategory )\r\n         .then ( imgs => {\r\n         \r\n           setTimeout(() => {\r\n\r\n             console.log(imgs);\r\n\r\n              setState({\r\n                data: imgs,\r\n                loading: false\r\n              })   \r\n               \r\n           }, 3000);\r\n         \r\n         }); // aca resolvemos la promesa para recuperar las imagenes\r\n   },[ pCategory ]);\r\n\r\n    return state;\r\n}\r\n\r\n","// Componentes funciuonales  acortador \"rafcp\" y presionamos tab\r\nimport React, { useState } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport  AddCategory  from './components/AddCategory.js';\r\nimport  { GifGrid }    from './components/GifGrid.js';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    \r\n    const [ categorias, setCategorias] = useState([\"One Punch Man\"]);\r\n    \r\n   \r\n    return (\r\n        \r\n         // fragment\r\n         <>\r\n            <h2>\r\n                GifExpertApp\r\n            </h2>\r\n\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( (categoria) => (\r\n                        <GifGrid \r\n                           key= { categoria } \r\n                           category = { categoria }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n/*GifExpertApp.propTypes = {\r\n\r\n}*/\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp.js'\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}